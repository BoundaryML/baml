# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..types.enums.enm_enumoutput import EnumOutput
from baml_core.stream import AsyncStream
from baml_lib._impl.functions import BaseBAMLFunction
from typing import AsyncIterator, Callable, List, Protocol, runtime_checkable


IV2_FnEnumListOutputOutput = List[EnumOutput]

@runtime_checkable
class IV2_FnEnumListOutput(Protocol):
    """
    This is the interface for a function.

    Args:
        input: str

    Returns:
        List[EnumOutput]
    """

    async def __call__(self, *, input: str) -> List[EnumOutput]:
        ...

   

@runtime_checkable
class IV2_FnEnumListOutputStream(Protocol):
    """
    This is the interface for a stream function.

    Args:
        input: str

    Returns:
        AsyncStream[List[EnumOutput], List[EnumOutput]]
    """

    def __call__(self, *, input: str
) -> AsyncStream[List[EnumOutput], List[EnumOutput]]:
        ...
class IBAMLV2_FnEnumListOutput(BaseBAMLFunction[List[EnumOutput], List[EnumOutput]]):
    def __init__(self) -> None:
        super().__init__(
            "V2_FnEnumListOutput",
            IV2_FnEnumListOutput,
            ["default_config"],
        )

    async def __call__(self, *args, **kwargs) -> List[EnumOutput]:
        return await self.get_impl("default_config").run(*args, **kwargs)
    
    def stream(self, *args, **kwargs) -> AsyncStream[List[EnumOutput], List[EnumOutput]]:
        res = self.get_impl("default_config").stream(*args, **kwargs)
        return res

BAMLV2_FnEnumListOutput = IBAMLV2_FnEnumListOutput()

__all__ = [ "BAMLV2_FnEnumListOutput" ]
