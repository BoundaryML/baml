// This file is auto-generated. Do not edit this file manually.
//
// Disable formatting for this file to avoid linting errors.
// tslint:disable
// @ts-nocheck

import b from '../';

import { traceAsync, FireBamlEvent } from '@boundaryml/baml-core/ffi_layer';


describe('test_case:blue_dolphin', () => {
  const test_fn = traceAsync('blue_dolphin', 'null', [['impl', 'string']], 'positional', async (impl) => {
    FireBamlEvent.tags({
      'test_dataset_name': 'ClassifyMessage',
      'test_case_name': 'test',
      'test_case_arg_name': `blue_dolphin[${impl}]`,
      'test_cycle_id': process.env.BOUNDARY_PROCESS_ID || 'local-run',
    });
    const test_case = `{"message":"This is so frustrating, i bought a laptop and it's not working properly. I want to return it and get my money back. I'm so disappointed","message_date":"2019-01-01T00:00:00Z"}`;
    const result = await b.ClassifyMessage.getImpl(impl).run(
      test_case
    );
  });

  describe('function:ClassifyMessage', () => {
    test('impl:level1', async () => {
      await test_fn('level1');
    });
  });
});

describe('test_case:case1', () => {
  const test_fn = traceAsync('case1', 'null', [['impl', 'string']], 'positional', async (impl) => {
    FireBamlEvent.tags({
      'test_dataset_name': 'ClassifyMessage',
      'test_case_name': 'test',
      'test_case_arg_name': `case1[${impl}]`,
      'test_cycle_id': process.env.BOUNDARY_PROCESS_ID || 'local-run',
    });
    const test_case = `{"message":"Hi! I'm having an issue with my account. Can you help me?","message_date":"2019-01-01T00:00:00Z"}`;
    const result = await b.ClassifyMessage.getImpl(impl).run(
      test_case
    );
  });

  describe('function:ClassifyMessage', () => {
    test('impl:level1', async () => {
      await test_fn('level1');
    });
  });
});
