// This file is auto-generated. Do not edit this file manually.
//
// Disable formatting for this file to avoid linting errors.
// tslint:disable
// @ts-nocheck
/* eslint-disable */

import b from '../';

import { FireBamlEvent, traceAsync } from '@boundaryml/baml-core/ffi_layer';


describe('test_case:expected_copper', () => {
  const test_fn = traceAsync('expected_copper', 'null', [['impl', 'string']], 'positional', async (impl) => {
    FireBamlEvent.tags({
      'test_dataset_name': 'ClassifyMessage2',
      'test_case_name': 'test',
      'test_case_arg_name': `test_expected_copper[ClassifyMessage2-${impl}]`,
      'test_cycle_id': process.env.BOUNDARY_PROCESS_ID || 'local-run',
    });
    const test_case = { "input": "The app isn\'t working on my phone" };
    const result = await b.ClassifyMessage2.getImpl(impl).run(
      test_case
    );
  });

  describe('function:ClassifyMessage2', () => {
    test('impl:default_config', async () => {
      await test_fn('default_config');
    }, 60000);
  });
});

describe('test_case:patient_olive', () => {
  const test_fn = traceAsync('patient_olive', 'null', [['impl', 'string']], 'positional', async (impl) => {
    FireBamlEvent.tags({
      'test_dataset_name': 'ClassifyMessage2',
      'test_case_name': 'test',
      'test_case_arg_name': `test_patient_olive[ClassifyMessage2-${impl}]`,
      'test_cycle_id': process.env.BOUNDARY_PROCESS_ID || 'local-run',
    });
    const test_case = { "input": "The item was damaged when I got it" };
    const result = await b.ClassifyMessage2.getImpl(impl).run(
      test_case
    );
  });

  describe('function:ClassifyMessage2', () => {
    test('impl:default_config', async () => {
      await test_fn('default_config');
    }, 60000);
  });
});


