# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..clients.client_main import Main
from ..functions.fx_classifyintent import BAMLClassifyIntent
from ..types.enums.enm_intent import Intent
from baml_lib._impl.deserializer import Deserializer
from typing import List


# Impl: v2
# Client: Main
# An implementation of .


__prompt_template = """\
Given the question, which of the intents is the user attempting to do?

Question:
```
{arg}
```

Intent
---
book_a_meeting: When the user wants to book a meeting
check_availability: When the query is directly asking about availability
SetReminder

Output format: "Intent as string"[]

Intent:\
"""

__input_replacers = {
    "{arg}"
}


# We ignore the type here because baml does some type magic to make this work
# for inline SpecialForms like Optional, Union, List.
__deserializer = Deserializer[List[Intent]](List[Intent])  # type: ignore
__deserializer.overload("Intent", {"book_a_meeting": "BookMeeting", "check_availability": "AvailabilityQuery"})






@BAMLClassifyIntent.register_impl("v2")
async def v2(arg: str, /) -> List[Intent]:
    response = await Main.run_prompt_template(template=__prompt_template, replacers=__input_replacers, params=dict(arg=arg))
    deserialized = __deserializer.from_string(response.generated)
    return deserialized
