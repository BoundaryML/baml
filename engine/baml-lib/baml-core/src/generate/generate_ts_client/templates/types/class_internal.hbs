// Function to validate if an object is a {{name}} object
function is{{name}}(obj: any): obj is {{name}} {
  return (
    obj &&
    typeof obj === "object"
    {{#each fields as |field|}}
    && ("{{field.name}}" in obj && ({{{field.check}}}))
    {{/each}}
  );
}


class Internal{{name}} implements {{name}} {
  private constructor(private data: {
    {{#each fields as |field|}}
    {{field.name}}: {{field.internal_type}},
    {{/each}}
  }, private raw: {{name}}) {}

  static from(data: {{name}}): Internal{{name}} {
    return new Internal{{name}}({
      {{#each fields as |field|}}
      {{field.name}}: {{{field.constructor}}},
      {{/each}}
    }, data);
  }

  {{#each fields as |field|}}
  get {{field.name}}(): {{field.internal_type}} {
    return this.data.{{field.name}};
  }
  {{/each}}

  {{#each getters as |getter|}}
  get {{getter.name}}(): {{getter.type}} {
    // TODO: Implement
    {{{getter.body}}}
  }
  {{/each}}

  toJSON(): string {
    return JSON.stringify(this.raw, null, 2);
  }
}