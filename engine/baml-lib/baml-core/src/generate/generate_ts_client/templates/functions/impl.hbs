const prompt_template = `\
{{{prompt}}}\
`;

const deserializer = new Deserializer<{{function.return_type}}>(schema, {
  $ref: '#/definitions/{{function.name}}_output'
});

{{function.name}}.registerImpl('{{name}}', {
  name: '{{name}}',
  run: async (
{{#if function.params.positional}}
{{function.params.name}}: {{function.params.type}}
{{else}}
{{function.params.name}}: {
  {{#each function.params.values as |v|}}{{v.name}}: {{v.type}}{{#unless @last}}, {{/unless}}{{/each}}
}
{{/if}}
  ): Promise<{{function.return_type}}> => {
  {{#if function.params.positional}}
  {{!-- const {{function.params.name}} = {{function.params.name}}; --}}
  {{else}}
  {{#each function.params.values as |v|}}
  const {{v.name}} = {{v.expr}};
  {{/each}}
  {{/if}}
  
    const result = await {{client}}.run_prompt_template(
      prompt_template,
      {
        {{#each inputs as |input key|}}
        "{{key}}": {{input}},
        {{/each}}
      }
    );

    return deserializer.coerce(result);
  }
});
