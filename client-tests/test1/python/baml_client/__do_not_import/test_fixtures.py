# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# BAML version: 0.0.1
# Generated Date: __DATE__
# Generated by: __USER__

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..baml_types import IMaybePolishText, IMessageSimplifier, ITextPolisher
from .generated_baml_client import baml
from _pytest.fixtures import FixtureRequest
import pytest

@pytest.fixture
def MessageSimplifierImpl(request: FixtureRequest) -> IMessageSimplifier:
    """
    To use this fixture, add this to your test.
    Note the parameter name must match the name of this fixture.

    ```python
    @baml.MessageSimplifier.test
    async def test_logic(MessageSimplifierImpl: IMessageSimplifier) -> None:
        result = await MessageSimplifierImpl(args_here)
        ...
    ```

    See the docstring for baml.MessageSimplifier.test for more information.


    See pytest documentation for more information on fixtures:
    https://docs.pytest.org/en/latest/fixture.html
    """
    return baml.MessageSimplifier.get_impl(request.param).run

@pytest.fixture
def MaybePolishTextImpl(request: FixtureRequest) -> IMaybePolishText:
    """
    To use this fixture, add this to your test.
    Note the parameter name must match the name of this fixture.

    ```python
    @baml.MaybePolishText.test
    async def test_logic(MaybePolishTextImpl: IMaybePolishText) -> None:
        result = await MaybePolishTextImpl(args_here)
        ...
    ```

    See the docstring for baml.MaybePolishText.test for more information.


    See pytest documentation for more information on fixtures:
    https://docs.pytest.org/en/latest/fixture.html
    """
    return baml.MaybePolishText.get_impl(request.param).run

@pytest.fixture
def TextPolisherImpl(request: FixtureRequest) -> ITextPolisher:
    """
    To use this fixture, add this to your test.
    Note the parameter name must match the name of this fixture.

    ```python
    @baml.TextPolisher.test
    async def test_logic(TextPolisherImpl: ITextPolisher) -> None:
        result = await TextPolisherImpl(args_here)
        ...
    ```

    See the docstring for baml.TextPolisher.test for more information.


    See pytest documentation for more information on fixtures:
    https://docs.pytest.org/en/latest/fixture.html
    """
    assert hasattr(request, "param"), f"TextPolisherImpl fixture must be parametrized, {request}"
    return baml.TextPolisher.get_impl(request.param).run
