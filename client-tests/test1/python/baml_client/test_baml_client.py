# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from .__do_not_import.generated_baml_client import baml
from .baml_types import ClassifyResponse, Conversation, DummyObj, IBlah, IClassifyIntent, IClassifyTool, IMaybePolishText, IMessageSimplifier, ITextPolisher, ImprovedResponse, Intent, Message, MessageSender, ProposedMessage, Sentiment, Tool
from baml_lib._impl.deserializer import Deserializer
from json5 import loads # type: ignore


@baml.MaybePolishText.test
async def test_busy_coral(MaybePolishTextImpl: IMaybePolishText):
    deserializer = Deserializer[ProposedMessage](ProposedMessage) # type: ignore
    param = deserializer.from_string("""\
{"thread":{"thread":[{"sender":"AI","body":"the website is broken"}]},"generated_response":"asdfasdf","dummy":{"prop1":"eeee","prop2":1,"prop3":false}}\
""")
    await MaybePolishTextImpl(param)


@baml.ClassifyIntent.test
async def test_cooing_tan(ClassifyIntentImpl: IClassifyIntent):
    deserializer = Deserializer[str](str) # type: ignore
    param = deserializer.from_string("""\
I want to cancel my order\
""")
    await ClassifyIntentImpl(param)


@baml.Blah.test
async def test_greasy_white(BlahImpl: IBlah):
    deserializer = Deserializer[str](str) # type: ignore
    param = deserializer.from_string("""\
big fan of this\
""")
    await BlahImpl(param)


@baml.ClassifyTool.test
async def test_international_scarlet(ClassifyToolImpl: IClassifyTool):
    case = loads("""
{"query":"hey my toaster is broken","context":"the user is an sde"}
""")
    deserializer_query = Deserializer[str](str) # type: ignore
    query = deserializer_query.from_string(case["query"])
    deserializer_context = Deserializer[str](str) # type: ignore
    context = deserializer_context.from_string(case["context"])
    await ClassifyToolImpl(
        query=query,
        context=context
    )


@baml.MessageSimplifier.test
async def test_obnoxious_maroon(MessageSimplifierImpl: IMessageSimplifier):
    deserializer = Deserializer[Conversation](Conversation) # type: ignore
    param = deserializer.from_string("""\
{"thread":[{"sender":"AI","body":"asfasefaes"}]}\
""")
    await MessageSimplifierImpl(param)


@baml.TextPolisher.test
async def test_potential_lavender(TextPolisherImpl: ITextPolisher):
    deserializer = Deserializer[ProposedMessage](ProposedMessage) # type: ignore
    param = deserializer.from_string("""\
null\
""")
    await TextPolisherImpl(param)


