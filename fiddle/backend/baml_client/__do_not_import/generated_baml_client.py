# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from .clients.client_claude import Claude
from .clients.client_claudeinstant import ClaudeInstant
from .clients.client_gpt3 import GPT3
from .clients.client_gpt4 import GPT4
from .clients.client_gpt4turbo import GPT4Turbo
from .functions.fx_ambiguousterm import BAMLAmbiguousTerm
from .functions.fx_chainofthought import BAMLChainOfThought
from .functions.fx_contradictions import BAMLContradictions
from baml_core.otel import add_message_transformer_hook, flush_trace_logs
from baml_core.provider_manager import LLMManager
from baml_core.services import LogSchema
from baml_lib import DeserializerException, baml_init
from typing import Callable, List, Optional


class BAMLClient:
    AmbiguousTerm = BAMLAmbiguousTerm
    ChainOfThought = BAMLChainOfThought
    Contradictions = BAMLContradictions
    Claude = Claude
    ClaudeInstant = ClaudeInstant
    GPT3 = GPT3
    GPT4 = GPT4
    GPT4Turbo = GPT4Turbo

    def __init__(self):
        LLMManager.validate()
        baml_init()

    def configure(
        self,
        project_id: Optional[str] = None,
        secret_key: Optional[str] = None,
        base_url: Optional[str] = None,
        enable_cache: Optional[bool] = None,
        stage: Optional[str] = None,
    ):
        return baml_init(
            project_id=project_id,
            secret_key=secret_key,
            base_url=base_url,
            enable_cache=enable_cache,
            stage=stage,
        )

    def add_before_send_message_hook(self, hook: Callable[[LogSchema], None]):
        add_message_transformer_hook(hook)

    def flush(self):
        flush_trace_logs()


baml = BAMLClient()
