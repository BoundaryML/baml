name: VSCode Extension

on:
  pull_request:
    paths:
      - "vscode_ext/**"
    branches:
      - canary
  push:
    paths:
      - "vscode_ext/.bumpversion.cfg"
    branches:
      - canary
    tags:
      - "release/vscode_ext/v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: 18
          cache-dependency-path: vscode-ext/pnpm-lock.yaml

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: vscode-ext/

      # Build the VSCode Extension
      - name: Build VSCode Extension
        id: build
        run: |
          pnpm run vscode:package
          VERSION=$(cat vscode-ext/package.json| grep version | cut -d ' ' -f 4 | sed 's/[",]//g')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        working-directory: vscode-ext/

      # Upload the artifact (helpful for debugging and manual downloads)
      - name: Upload VSCode Extension Artifact
        uses: actions/upload-artifact@v3
        with:
          name: gloo-vscode.vsix
          path: vscode-ext/gloo-${{ steps.build.outputs.version }}.vsix

  pre-release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/canary'
    environment: nightly
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: gloo-vscode
          path: vscode-ext/

      - id: hash
        run:
          VERSION=$(cat vscode-ext/package.json| grep version | cut -d ' ' -f 4 | sed 's/[",]//g')
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+\+canary\.[0-9]+$ ]]; then
          echo "Version ($VERSION) is not a pre-release build"
          exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "vsix_hash=$(shasum -a 256 vscode-ext/gloo-${VERSION} | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "vscode_ext-${{ steps.hash.outputs.version }}"
          files: |
            vscode-ext/gloo-${{ steps.hash.outputs.version }}.vsix
          prerelease: true
          body: |
            ## Hashes
            VSIX: ${{ steps.hash.outputs.vsix_hash }}

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: 18
          cache-dependency-path: vscode-ext/pnpm-lock.yaml

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --dev
        working-directory: vscode-ext/

      - name: Publish
        run: |
          pnpm run vscode:publish
        working-directory: vscode-ext/

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/release/')
    environment: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: gloo-vscode
          path: vscode-ext/

      - id: hash
        run:
          VERSION=$(cat vscode-ext/package.json| grep version | cut -d ' ' -f 4 | sed 's/[",]//g')
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Version ($VERSION) is not a release build"
          exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "vsix_hash=$(shasum -a 256 vscode-ext/gloo-${VERSION} | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "vscode_ext-${{ steps.hash.outputs.version }}"
          files: |
            vscode-ext/gloo-${{ steps.hash.outputs.version }}.vsix
          prerelease: true
          body: |
            ## Hashes
            VSIX: ${{ steps.hash.outputs.vsix_hash }}

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: 18
          cache-dependency-path: vscode-ext/pnpm-lock.yaml

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --dev
        working-directory: vscode-ext/

      - name: Publish
        run: |
          pnpm run vscode:publish
        working-directory: vscode-ext/
