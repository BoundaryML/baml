name: Python Client

on:
  pull_request:
    paths:
      - 'clients/python/**'
    branches:
      - canary
  push:
    paths:
      - 'clients/python/**'
    branches:
      - canary
  workflow_dispatch:
    inputs:
      release:
        description: 'Should this be a release? (y/n)'
        required: false
        default: 'y'

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3
    
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
  
      - name: Set up cache
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: clients/python/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('clients/python/poetry.lock') }}
  
      - name: Install dependencies
        run: poetry install
        working-directory: clients/python
  
      - name: Lint Python Client
        run: |
          poetry run mypy .
          poetry run ruff check .
          poetry run black --check .
        working-directory: clients/python
  
      - name: Build Python Client
        run: poetry build
        working-directory: clients/python
      
      - name: Create artifact
        if: github.event.inputs.release == 'y'
        uses: actions/upload-artifact@v3
        with:
          name: python-client
          path: clients/python/dist/
      
      - name: Release
        if: github.event.inputs.release == 'y'
        run: echo poetry publish

      - name: Save dependencies to cache
        uses: actions/cache@v3
        with:
          path: clients/python/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('clients/python/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-
