name: BAML Runtime

on:
  pull_request:
    branches:
      - canary
  push:
    paths:
      - "engine/**"
      - ".github/workflows/primary.yml"
    branches:
      - canary
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  repository-projects: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9.0.6
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: |
            typescript/**/pnpm-lock.yaml
      - name: Install Node
        run: pnpm install --frozen-lockfile
        working-directory: typescript
      - name: Check TS Lint
        run: pnpm biome ci . --organize-imports-enabled=false
        working-directory: typescript
  test_node_generator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9.0.6
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: |
            engine/language_client_typescript/pnpm-lock.yaml
            integ-tests/typescript/pnpm-lock.yaml
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: engine
      - name: Install Node
        run: pnpm install --frozen-lockfile
        working-directory: engine/language_client_typescript
      - name: Build Node
        run: pnpm build
        working-directory: engine/language_client_typescript
      - name: Install Node
        run: pnpm install --frozen-lockfile
        working-directory: integ-tests/typescript
      - name: Test Node Generator
        run: pnpm generate
        working-directory: integ-tests/typescript
      - name: Ensure No Changes
        run: git diff --exit-code
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: engine
      - name: Test Rust
        run: cargo test
        working-directory: engine

  build-release:
    strategy:
      matrix:
        _:
          - target: aarch64-apple-darwin
            host: macos-14
            node_build: pnpm build --target aarch64-apple-darwin

          # Disabled as python is not supported on aarch64 windows
          # - target: aarch64-pc-windows-msvc
          #   host: windows-latest
          #   node_build: pnpm build --target aarch64-pc-windows-msvc

          # Disabled as maturin has issues with aarch64 linux
          # - target: aarch64-unknown-linux-gnu
          #   host: ubuntu-latest
          #   node_build: pnpm build --target aarch64-unknown-linux-gnu --use-napi-cross

          - target: x86_64-apple-darwin
            host: macos-latest
            node_build: pnpm build --target x86_64-apple-darwin

          - target: x86_64-pc-windows-msvc
            host: windows-latest
            node_build: pnpm build --target x86_64-pc-windows-msvc

          - target: x86_64-unknown-linux-gnu
            host: ubuntu-latest
            node_build: pnpm build --target x86_64-unknown-linux-gnu --use-napi-cross

    name: Build ${{ matrix._.target }}
    runs-on: ${{ matrix._.host }}
    steps:
      - uses: actions/checkout@v4
      # Install python set up
      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          architecture: ${{ matrix._.host == 'windows-latest' && 'x64' || null }}
      # Install node set up
      - uses: pnpm/action-setup@v3
        with:
          version: 9.0.6
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: |
            engine/language_client_typescript/pnpm-lock.yaml
      # Install rust
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix._.target }}
      # Install steps
      - name: PNPM Install
        run: pnpm install --frozen-lockfile
        working-directory: engine/language_client_typescript
      # Rust caching
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: engine
      - name: Install aarch64-linux-gnu
        if: matrix._.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get install gcc-aarch64-linux-gnu -y

      # This doesn't work aarch64, so we build each target separately
      # - name: Build Rust
      #   run: cargo build --release --target ${{ matrix._.target }}
      #   working-directory: engine

      # Build Node
      - name: PNPM Build
        run: ${{ matrix._.node_build }}
        working-directory: engine/language_client_typescript

      # Build Python
      - name: Build Python
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix._.target }}
          command: build
          args: --release --out engine/language_client_python/dist --manifest-path engine/language_client_python/Cargo.toml
          sccache: "true"
          manylinux: ${{ matrix._.host == 'ubuntu-latest' && 'auto' || null }}
          before-script-linux: |
            if command -v yum &> /dev/null; then
                yum update -y && yum install -y perl-core openssl openssl-devel pkgconfig libatomic
            else
                # If we're running on debian-based system.
                apt update -y && apt-get install -y libssl-dev openssl pkg-config
            fi

      # Upload
      - name: Upload Python
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix._.target }}
          path: engine/language_client_python/dist
          if-no-files-found: error

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix._.target }}
          path: engine/language_client_typescript/*.node
          if-no-files-found: error

