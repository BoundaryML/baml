name: Compile VSCode Extension
inputs:
  release:
    description: "Whether to release the extension (0 / prerelease / stable)"
    required: false
    default: "0"
runs:
  using: composite
  steps:
    # Set up Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('vscode-ext/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install Dependencies
      run: pnpm install --frozen-lockfile
      working-directory: vscode-ext/

    # Build the VSCode Extension
    - name: Build VSCode Extension
      run: |
        pnpm run vscode:package
      working-directory: vscode-ext/

    # Upload the artifact (helpful for debugging and manual downloads)
    - name: Upload VSCode Extension Artifact
      uses: actions/upload-artifact@v3
      with:
        name: gloo-vscode
        path: vscode-ext/gloo-*.vsix

    - name: Release Extension
      if: ${{ inputs.release }} == 'prerelease' || ${{ inputs.release }} == 'stable'
      run: |
        if [ "${{ inputs.release }}" = "prerelease" ]; then
          echo pnpm run vscode:release --pre-release -p ${{ secrets.VSCE_PAT }}
        else
          echo pnpm run vscode:release -p ${{ secrets.VSCE_PAT }}
        fi
      working-directory: vscode-ext/
