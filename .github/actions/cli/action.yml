name: Compile VSCode Extension
inputs:
  target:
    description: "The target to build for"
    required: true
runs:
  using: composite
  steps:
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Install cross-compilation dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64 ccache
      # Only execute this step when building for a Windows target
      if: inputs.target == 'x86_64-pc-windows-msvc'

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ inputs.target }}
        default: true
        profile: minimal

    - name: Set CC for Windows targets
      run: echo "CC=x86_64-w64-mingw32-gcc" >> $GITHUB_ENV
      if: inputs.target == 'x86_64-pc-windows-msvc'

    - name: Cache Cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache Cargo target
      uses: actions/cache@v3
      with:
        path: cli/target
        key: ${{ runner.os }}-cargo-target-${{ inputs.target }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Compile
      runs: |
        cargo build --release --target ${{ inputs.target }}
      working-directory: cli
