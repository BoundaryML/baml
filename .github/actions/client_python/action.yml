name: Compile VSCode Extension
inputs:
  release:
    description: "Whether to release the extension (0 / 1)"
    required: false
    default: "0"
runs:
  using: composite
  steps:
    - name: Set up Python
      id: full-python-version
      uses: actions/setup-python@v4
      with:
        python-version: 3

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Set up cache
      uses: actions/cache@v3
      id: cached-poetry-dependencies
      with:
        path: clients/python/.venv
        key: venv-${{ runner.os }}-${{ hashFiles('clients/python/poetry.lock') }}

    - name: Install dependencies
      run: poetry install
      working-directory: clients/python

    - name: Lint Python Client
      run: |
        poetry run mypy .
        poetry run ruff check .
        poetry run black --check .
      working-directory: clients/python

    - name: Build Python Client
      run: poetry build
      working-directory: clients/python

    - name: Save dependencies to cache
      uses: actions/cache@v3
      with:
        path: clients/python/.venv
        key: venv-${{ runner.os }}-${{ hashFiles('clients/python/poetry.lock') }}
        restore-keys: |
          venv-${{ runner.os }}-

    - name: Publish Python Client
      if: ${{ inputs.release == '1' }}
      run: echo poetry publish
      working-directory: clients/python
